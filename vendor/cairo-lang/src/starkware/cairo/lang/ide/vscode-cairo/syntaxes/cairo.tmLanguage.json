{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Cairo",
    "patterns": [
        {
            "name": "meta.control.if",
            "begin": "\\b(if)\\s+(.+)\\s*\\:",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.if"
                },
                "2": {
                    "name": "entity.name.condition"
                }
            },
            "contentName": "source.cairo",
            "end": "\\bend\\b",
            "patterns": [
                {
                    "include": "source.cairo"
                }
            ],
            "endCaptures": {
                "0": {
                    "name": "keyword.control.end"
                }
            }
        },
        {
            "name": "meta.control.with",
            "begin": "\\b(with)\\s+(.+)\\s*\\:",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.with"
                },
                "2": {
                    "name": "entity.name.identifiers"
                }
            },
            "contentName": "source.cairo",
            "end": "\\bend\\b",
            "patterns": [
                {
                    "include": "source.cairo"
                }
            ],
            "endCaptures": {
                "0": {
                    "name": "keyword.control.end"
                }
            }
        },
        {
            "name": "keyword.control.else",
            "match": "\\belse\\b"
        },
        {
            "name": "keyword.other.opcode",
            "match": "\\b(call|jmp|ret|abs|rel|if)\\b"
        },
        {
            "name": "keyword.other.register",
            "match": "\\b(ap|fp)\\b"
        },
        {
            "name": "keyword.other.meta",
            "match": "\\b(const|let|local|tempvar|felt|as|from|import|static_assert|return|assert|member|cast|alloc_locals|with|nondet)\\b"
        },
        {
            "name": "markup.italic",
            "match": "\\b(SIZEOF_LOCALS|SIZE)\\b"
        },
        {
            "name": "comment.line.sharp",
            "match": "#[^\n]*\n"
        },
        {
            "name": "entity.name.function",
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*:"
        },
        {
            "name": "meta.function.cairo",
            "begin": "\\b(func)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*[({]",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.function.cairo"
                },
                "2": {
                    "name": "entity.name.function"
                }
            },
            "contentName": "source.cairo",
            "end": "\\bend\\b",
            "patterns": [
                {
                    "include": "source.cairo"
                }
            ],
            "endCaptures": {
                "0": {
                    "name": "storage.type.function.cairo"
                }
            }
        },
        {
            "name": "meta.function.cairo",
            "begin": "\\b(struct|namespace)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*:",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.function.cairo"
                },
                "2": {
                    "name": "entity.name.function"
                }
            },
            "contentName": "source.cairo",
            "end": "\\bend\\b",
            "patterns": [
                {
                    "include": "source.cairo"
                }
            ],
            "endCaptures": {
                "0": {
                    "name": "storage.type.function.cairo"
                }
            }
        },
        {
            "name": "constant.numeric.decimal",
            "match": "\\b[+-]?[0-9]+\\b"
        },
        {
            "begin": "%{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.embedded.begin.python"
                }
            },
            "end": "%}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.embedded.end.python"
                },
                "1": {
                    "name": "source.python"
                }
            },
            "name": "meta.embedded.block.python",
            "contentName": "source.python",
            "patterns": [
                {
                    "include": "source.python"
                }
            ]
        },
        {
            "begin": "%\\[",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.embedded.begin.python"
                }
            },
            "end": "%\\]",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.embedded.end.python"
                },
                "1": {
                    "name": "source.python"
                }
            },
            "name": "meta.embedded.block.python",
            "contentName": "source.python",
            "patterns": [
                {
                    "include": "source.python"
                }
            ]
        }
    ],
    "scopeName": "source.cairo"
}
