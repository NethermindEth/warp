name: develop-ci

on:
  push:
    branches: [develop]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check formatting
        run: |
          pipx install black[colors]
          pipx install isort[colors]
          pipx install cairo-lang
          black . --check --verbose --diff --color
          isort . --check --verbose --diff --color
          isort --ext cairo warp/cairo-src --check --verbose --diff --color
          find warp/cairo-src/ -iname *.cairo -exec cairo-format -c {} +

  test-complete:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: NethermindEth/warp-build-action@v1

      - name: Setup a local devnet
        run: |
          pipx install starknet-devnet==0.1.9
          starknet-devnet --host localhost --port 5000 &

      - name: Setup BATS testing framework
        uses: mig4/setup-bats@v1.2.0

      - name: Test golden tests
        run: |
          export STARKNET_NETWORK=localhost:5000
          make test_bats

      - name: Test yul tests
        run: make test_yul

  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup source hash (pull_request)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git fetch origin "${{ github.head_ref }}":"${{ github.head_ref }}" --depth 20
          source_hash="$(git rev-parse ${{ github.head_ref }})"
          echo "source_hash=$source_hash" >> $GITHUB_ENV

      - name: Setup source hash (push)
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "source_hash=${{ github.sha }}" >> $GITHUB_ENV

      - uses: NethermindEth/warp-build-action@v1

      - name: Create benchmarks
        run: |
          mkdir -p benchmark/stats benchmark/tmp
          python -m pytest tests/behaviour/ -v --tb=short --workers=auto
          make benchmark
          mv ./benchmark/stats/stats.md "./benchmark/stats/${{ env.source_hash }}.md"

      - name: Push benchmarks to another repository
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: "benchmark/stats/${{ env.source_hash }}.md"
          destination_repo: "NethermindEth/warp-benchmark"
          destination_folder: "stats"
          destination_branch: master
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
          user_name: "Github Actions"

      - name: Push commits list
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: "benchmark/stats/commits.txt"
          destination_repo: "NethermindEth/warp-benchmark"
          destination_folder: "stats"
          destination_branch: master
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
          user_name: "Github Actions"
